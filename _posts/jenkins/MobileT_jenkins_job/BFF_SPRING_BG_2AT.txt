##########################################################################################
###################### BFF_SPRING_BG_2AT ##### ###########################################
##########################################################################################
@Library('retort') _
timestamps {
 def label = "jenkins-${UUID.randomUUID().toString()}"
 podTemplate(cloud: K8S_POD_TEMPLATE, label:label, serviceAccount: K8S_DVS_SA, terminationGracePeriodSeconds: 60,
  containers: [
   containerTemplate(name: 'jnlp', image: "${DOCKER_REGISTRY}/${DOCKER_DVS_NAMESPACE}/jnlp-slave:latest", args: '${computer.jnlpmac} ${computer.name}'),
   containerTemplate(name: 'postbot', image: "${DOCKER_REGISTRY}/${DOCKER_DVS_NAMESPACE}/postbot:0.6.0", ttyEnabled: true, command: 'cat')
  ],
  volumes: [
   hostPathVolume(hostPath: '/etc/hosts', mountPath: '/etc/hosts')
  ],
  workspaceVolume: 
   persistentVolumeClaimWorkspaceVolume(claimName: WORKSPACE_PVC, readOnly: false)
  ) {
   
  node(label) {
   stage('Check Out Source') {
    gitCmd.checkout credentialsId: GIT_CREDENTIAL, url: GIT_URL, branch: GIT_BRANCH
   }
   
   stage('API Test') {
    container('postbot') {
     //gitCmd.checkout credentialsId: GIT_CREDENTIAL, url: GIT_URL, branch: GIT_BRANCH
     /*
     try {
      def status = sh (script:"postbot run -d ${COLLECTION_PATH} --thresholds rate=${THRESHOLD_RATE}", returnStatus: true)
      if(status == 1) {
       return
      }
     } catch(e) {
      emailext (
       subject: "[MyBuild] Test Failed: Job '${env.JOB_NAME} #${env.BUILD_NUMBER}'",
       body: """<p>Test Failed: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
        <p>See the report: <a href="${env.BUILD_URL}API_Test_Result_Report/">${env.BUILD_URL}API_Test_Result_Report/</a></p>""",
       to: MAIL_TO
      )
      throw e
     } finally {
      publishHTML([
       allowMissing: false, 
       alwaysLinkToLastBuild: true, 
       keepAll: true, 
       reportDir: './report', 
       reportFiles: 'apiTestReport.html', 
       reportName: 'API Test Result Report', 
       reportTitles: 'API Test Result'
      ])
     }
     */
    }
   }
  }
 }
}