---
layout: post
title: ICP openldap 연결
date: 2019-01-30
categories: data
author: himang10
tags: [ldap, security]
description: Configmap 사용을 위한 설명
---

### 사전 작업
cloudctl 설치 [install](https://www.ibm.com/support/knowledgecenter/ko/SSBS6K_3.1.0/manage_cluster/install_cli.html)

openldap 및 phpldapadmin 이미지를 registry에 등록

```
git clone http://github.com/ibm-cloud-architecture/icp-openldap.git
mv icp-openldap ldap

cd openldap
```

vi values.yaml

```yaml
OpenLdap:
  Image: "cnpstg.skhynix.com:8500/default/osixia/openldap
  ImageTag: "1.1.10"
  ImagePullPolicy: "Always"
  Component: "oepnldap"
  
  Replicas: 1
  
  Cpu: "512m"
  Memory: "200Mi"
  
  Domain: "local.io"
  AdminPassword: "admin"
  Https: "false"
  SeedUsers:
    usergroup": "icpusers"
    userlist: "user1, user2, user3, user4"
    initalPassword: "ChangeMe"
    
 PhpLdapAdmin:
   Image: .../default/osixia/phpldapadmin"
   ImageTag: "latest"
   ImagePullPolicy: "Always"
   Component: "phpadmin"
   
   Replicas: 1
   
   NodePort: 31080
   
   cpu:
   Memory
 ```
 
 * icp openldap packaging
 
 ```
 cd ..
 helm package openldap
 ````

* load chart

```
 cloudctl login -a https://masternode:8443 --skip-ssl-validation
 cloudctl catalog load-helm-chart  --archive openldap-0.1.5.tgz
```

### 생성

* 생성 시 configuration 정보

release name                 | ldap
---------------------------- | ---------------------------------------------
target namespace             | default
SeedUsers.usergroup          | zcpusers
SeedUsers.userlist           | master
SeedUsers.initialPassword    | 1234
Image                        | cnpstg.skhynix.com:8500/default/phpldapadmin

* 접속정보
> URL   : https://phpldapadmin.cnpstg.skhynix.com
> Login : DN/ password cn=admin,dc=local,dc=io / admin

configmap
> ldap-seedusers

for example
- dc=local,dc=io
- cn=admin,dc=local,dc=io
- ldap://cluster_IP:389
- 그룹 ID map: *:cn
- 사용자 ID: *:uid
- 그룹 맴버 ID: groupofUniqueNames:uniqueMember

### cloudctl 사용하지 않고 설치하는 방법

*** Helm install by local file ***

* Helm install
```
helm install --name openldap --namespace kube-system ./openldap --tls
```

* 삭제 시
```
helm ls --all --tls
helm delete openldap --purge --tls
```

* 생성 후 상태 확인
- 직접 docker 접속 해서 확인
```
kubectl exec -it {pod name} 
ldapsearch -x -H ldap://localhost:389 -b "dc=local,dc=io" -D "cn=admin,dc=local,dc=io" -w admin
# extended LDIF
#
# LDAPv3
# base <dc=local,dc=io> with scope subtree
# filter: (objectclass=*)
# requesting: ALL
#

# local.io
dn: dc=local,dc=io
objectClass: top
objectClass: dcObject
objectClass: organization
o: Example Inc.
dc: local

# admin, local.io
dn: cn=admin,dc=local,dc=io
objectClass: simpleSecurityObject
objectClass: organizationalRole
cn: admin
description: LDAP administrator
userPassword:: e1NTSEF9Y2piNEx1UEpzRHh3Q01WWERaZDdqSTNrblBybHRwY1k=

# Groups, local.io
dn: ou=Groups,dc=local,dc=io
objectClass: organizationalUnit
ou: Groups

# People, local.io
dn: ou=People,dc=local,dc=io
objectClass: organizationalUnit
ou: People

# user1, People, local.io
dn: uid=user1,ou=People,dc=local,dc=io
objectClass: inetOrgPerson
objectClass: organizationalPerson
objectClass: person
objectClass: top
uid: user1
displayName: user1
sn: user1
cn: user1
userPassword:: eXd5aTEwMDQ=

# user2, People, local.io
dn: uid=user2,ou=People,dc=local,dc=io
objectClass: inetOrgPerson
objectClass: organizationalPerson
objectClass: person
objectClass: top
uid: user2
displayName: user2
sn: user2
cn: user2
userPassword:: eXd5aTEwMDQ=

# user3, People, local.io
dn: uid=user3,ou=People,dc=local,dc=io
objectClass: inetOrgPerson
objectClass: organizationalPerson
objectClass: person
objectClass: top
uid: user3
displayName: user3
sn: user3
cn: user3
userPassword:: eXd5aTEwMDQ=

# user4, People, local.io
dn: uid=user4,ou=People,dc=local,dc=io
objectClass: inetOrgPerson
objectClass: organizationalPerson
objectClass: person
objectClass: top
uid: user4
displayName: user4
sn: user4
cn: user4
userPassword:: eXd5aTEwMDQ=

# admin, Groups, local.io
dn: cn=admin,ou=Groups,dc=local,dc=io
cn: admin
objectClass: groupOfUniqueNames
objectClass: top
owner: cn=admin,dc=local,dc=io
uniqueMember: uid=user1,ou=People,dc=local,dc=io
uniqueMember: uid=user2,ou=People,dc=local,dc=io
uniqueMember: uid=user3,ou=People,dc=local,dc=io
uniqueMember: uid=user4,ou=People,dc=local,dc=io

# search result
search: 2
result: 0 Success

# numResponses: 10
# numEntries: 9
```
- 외부에서 접속 하는 방법
```
kubectl port-forward openldap-8b474496c-628n4 30011:389 &

ldapsearch -x -H ldap://localhost:30011 -b "dc=local,dc=io" -D "cn=admin,dc=local,dc=io" -w admin
```

- Ingress 접속

